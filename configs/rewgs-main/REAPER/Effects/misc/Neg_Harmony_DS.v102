desc: Negative Harmony
//    v1.02
//    DarkStar 2018
//    flips notes around an axis, giving a mirror image
//    inspired by an article by Dave Clews in Computer Music #257

/* GUI Controls:
    Notes on MIDI:       selects the MIDi channel (or all channels) to be processed
    Root Note and Scale: sets the properties of the clip,
                         also forces automatic calculation of the preferred Axis,  
    Axis:                selects the desired axis (offset from the Root Note), over-riding the above,
    Transpose:           transposes the processed notes up / down
    Mode:                Chromatic uses a single Axis; 
                         Octave uses a separate axis for each Octave,
                         starting from the Root Key
    Monitor Note In:     displays the received note, 
                         set it to any note value to enable monitoring
                         set it to "Off" to disable monitoring
    Monitor Note Out:    displays the transposed note
*/

in_pin:none
out_pin:none

slider1:0<0,16,1{Any channel, Channel 01,Channel 02,Channel 03,Channel 04,Channel 05,Channel 06,Channel 07,Channel 08,Channel 09,Channel 10,Channel 11,Channel 12,Channel 13,Channel 14,Channel 15,Channel 16}>Notes on MIDI
//slider2:0<0,11,1{C,C#,D,D#,E,F,F#,G,A,A#,B}>Root key
slider2:48<0,127,1{0: C-2,1: C#-2,2: D-2,3: D#-2,4: E-2,5: F-2,6: F#-2,7: G-2,8: G#-2,9: A-2,10: A#-2,11: B-2,12: C-1,13: C#-1,14: D-1,15: D#-1,16: E-1,17: F-1,18: F#-1,19: G-1,20: G#-1,21: A-1,22: A#-1,23: B-1,24: C0,25: C#0,26: D0,27: D#0,28: E0,29: F0,30: F#0,31: G0,32: G#0,33: A0,34: A#0,35: B0,36: C1,37: C#1,38: D1,39: D#1,40: E1,41: F1,42: F#1,43: G1,44: G#1,45: A1,46: A#1,47: B1,48: C2,49: C#2,50: D2,51: D#2,52: E2,53: F2,54: F#2,55: G2:,56: G#2,57: A2,58: A#2,59: B2,60: C3,61: C#3,62: D3,63: D#3,64: E3,65: F3,66: F#3,67: G3,68: G#3,69: A3,70: A#3,71: B3,72: C4,73: C#4,74: D4,75: D#4,76: E4,77: F4,78: F#4,79: G4,80: G#4,81: A4,82: A#4,83: B4,84: C5,85: C#5,86: D5,87: D#5,88: E5,89: F5,90: F#5,91: G5,92: G#5,93: A5,94: A#5,95: B5,96: C6,97: C#6,98: D6,99: D#6,100: E6,101: F6,102: F#6,103: G6,104: G#6,105: A6,106: A#6,107: B6,108: C7,109: C#7,110: D7,111: D#7,112: E7,113: F7,114: F#7,115: G7,116: G#7,117: A7,118: A#7,119: B7,120: C8,121: C#8,122: D8,123: D#8,124: E8,125: F8,126: F#8,127: G8}>Root Note
slider3:0<0,7,1{Major,Dorian,Phrygian,Lydian,Mixolydian,Minor,Aeolian,Locrian}>Scale
slider4:3.5<0,11.5,0.5>Axis
slider5:0<-24,24,1)>Transpose
slider6:0<0,1,1{Chromatic, Octave}>Mode

slider8:128<0,128,1{0: C-2,1: C#-2,2: D-2,3: D#-2,4: E-2,5: F-2,6: F#-2,7: G-2,8: G#-2,9: A-2,10: A#-2,11: B-2,12: C-1,13: C#-1,14: D-1,15: D#-1,16: E-1,17: F-1,18: F#-1,19: G-1,20: G#-1,21: A-1,22: A#-1,23: B-1,24: C0,25: C#0,26: D0,27: D#0,28: E0,29: F0,30: F#0,31: G0,32: G#0,33: A0,34: A#0,35: B0,36: C1,37: C#1,38: D1,39: D#1,40: E1,41: F1,42: F#1,43: G1,44: G#1,45: A1,46: A#1,47: B1,48: C2,49: C#2,50: D2,51: D#2,52: E2,53: F2,54: F#2,55: G2:,56: G#2,57: A2,58: A#2,59: B2,60: C3,61: C#3,62: D3,63: D#3,64: E3,65: F3,66: F#3,67: G3,68: G#3,69: A3,70: A#3,71: B3,72: C4,73: C#4,74: D4,75: D#4,76: E4,77: F4,78: F#4,79: G4,80: G#4,81: A4,82: A#4,83: B4,84: C5,85: C#5,86: D5,87: D#5,88: E5,89: F5,90: F#5,91: G5,92: G#5,93: A5,94: A#5,95: B5,96: C6,97: C#6,98: D6,99: D#6,100: E6,101: F6,102: F#6,103: G6,104: G#6,105: A6,106: A#6,107: B6,108: C7,109: C#7,110: D7,111: D#7,112: E7,113: F7,114: F#7,115: G7,116: G#7,117: A7,118: A#7,119: B7,120: C8,121: C#8,122: D8,123: D#8,124: E8,125: F8,126: F#8,127: G8,Off}>Monitor Note In
slider9:128<0,127,1{0: C-2,1: C#-2,2: D-2,3: D#-2,4: E-2,5: F-2,6: F#-2,7: G-2,8: G#-2,9: A-2,10: A#-2,11: B-2,12: C-1,13: C#-1,14: D-1,15: D#-1,16: E-1,17: F-1,18: F#-1,19: G-1,20: G#-1,21: A-1,22: A#-1,23: B-1,24: C0,25: C#0,26: D0,27: D#0,28: E0,29: F0,30: F#0,31: G0,32: G#0,33: A0,34: A#0,35: B0,36: C1,37: C#1,38: D1,39: D#1,40: E1,41: F1,42: F#1,43: G1,44: G#1,45: A1,46: A#1,47: B1,48: C2,49: C#2,50: D2,51: D#2,52: E2,53: F2,54: F#2,55: G2:,56: G#2,57: A2,58: A#2,59: B2,60: C3,61: C#3,62: D3,63: D#3,64: E3,65: F3,66: F#3,67: G3,68: G#3,69: A3,70: A#3,71: B3,72: C4,73: C#4,74: D4,75: D#4,76: E4,77: F4,78: F#4,79: G4,80: G#4,81: A4,82: A#4,83: B4,84: C5,85: C#5,86: D5,87: D#5,88: E5,89: F5,90: F#5,91: G5,92: G#5,93: A5,94: A#5,95: B5,96: C6,97: C#6,98: D6,99: D#6,100: E6,101: F6,102: F#6,103: G6,104: G#6,105: A6,106: A#6,107: B6,108: C7,109: C#7,110: D7,111: D#7,112: E7,113: F7,114: F#7,115: G7,116: G#7,117: A7,118: A#7,119: B7,120: C8,121: C#8,122: D8,123: D#8,124: E8,125: F8,126: F#8,127: G8,Off}>Monitor Note Out


// slider19:64<0,119,1{0 Bank Sel M,1 Mod Wheel M,2 Breath M,3,4 Foot P M,5 Porta M,6 Data Entry M,7 Vol M,8 Balance M,9,10 Pan M,11 Expression M,12 Ctrl 1 M,13 Ctrl 2 M,14,15,16 GP Slider 1,17 GP Slider 2,18 GP Slider 3,19 GP Slider 4,20,21,22,23,24,25,26,27,28,29,30,31,32 Bank Sel L,33 Mod Wheel L,34 Breath L,35,36 Foot P L,37 Porta L,38 Data Entry L,39 Vol L,40 Balance L,41,42 Pan L,43 Expression L,44 Ctrl 1 L,45 Ctrl 2 L,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64 Hold P sw,65 Porta sw,66 Sustenuto sw,67 Soft P sw,68 Legato P sw,69 Hold 2 P sw,70 S.Variation,71 S.Timbre,72 S.Release,73 S.Attack,74 S.Brightness,75 S.Ctrl 6,76 S.Ctrl 7,77 S.Ctrl 8,78 S.Ctrl 9,79 S.Ctrl 10,80 GP B.1 sw,81 GP B.2 sw,82 GP B.3 sw,83 GP B.4 sw,84,85,86,87,88,89,90,91 Effects Lv,92 Trem Lv,93 Chorus Lv,94 Celeste Lv,95 Phaser Lv,96 Data B. Inc,97 Data B. Dec,98 NRP L,99 NRP M,100 RP L,101 RPM,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119}>From CC#



// ==========================================================
@serialize
// ==========================================================

    store_01 = file_var(0, in_channel);
    store_02 = file_var(0, root_note);
    store_03 = file_var(0, scale);
    store_04 = file_var(0, axis);
    store_05 = file_var(0, transpose);
    store_06 = file_var(0, mode);


// ==========================================================
@init
// ==========================================================

// 7 note scales
    strcpy(1, "Major  102034050607");
    strcpy(2, "Dorian  102304050670");
    strcpy(3, "Phrygian  120304056070");
    strcpy(4, "Lydian  102030450607");
    strcpy(5, "Mixolydian  102034050670");
    strcpy(6, "Minor  102304056070");
    strcpy(7, "Aeolian  102304056070");
    strcpy(8, "Locrian  120304506070");

    ext_noinit   = 1;

    CC_MSG   = 11;
    AT_MSG   = 10;
    NOTE_ON  = 09;
    NOTE_OFF = 08;
    
    CHROMATIC = 0; OCTAVE =1;
    NO = 0; YES =1;
    SEND = 1;
    OFF = 0;
    

// -----------------------------------------------
    end_main_storage = 1024;


    in_channel      =   1;


// ==========================================================
@slider
// ==========================================================
    in_channel  = slider1;
    root_note   = slider2;
    scale       = slider3;
    axis        = slider4;
    transpose   = slider5;
    mode        = slider6;
    
    root_key    = root_note %12;

// .... set axis, based on 5th position in scale
    slider2 != old_s2 ? old_s3 = -1; old_s2 = slider2;
    slider4 != old_s4 ? old_s3 = -1; old_s4 = slider4;
    
    slider3 != old_s3 ? (
        old_s3 = slider3;
        strcpy(#def,slider3+1); 
        match("%s  %s", #def, scale_idx, #numbers);  
        i = 0;
        five_pos = -1;
        isl = strlen(#numbers);
        while (i < strlen(#numbers) && five_pos == -1) (
            str_getchar(#numbers,i) == 53 ? five_pos = i;  // 53 = charater "5"
            i +=1;
        );
        slider4 = five_pos /2; 
    );


// ==========================================================
@block
// ==========================================================

    while (midirecv(mpos, msg1, msg23))
    (
        msg = (msg1 / 16) | 0;
        msg_channel = 1 + msg1 - (msg * 16);    // 01 ... 16 
        msg_num = msg23 & 127;
        msg_value = (msg23 / 256) | 0;

        note_received =  (in_channel == 0 || msg_channel == in_channel)
                         && ( msg == NOTE_ON  || msg == NOTE_OFF);     
        note_received ? (
            mode == CHRMOMATIC ? (
                distance = msg_num - (root_note + axis)
            ):(
                temp = (((msg_num - root_key) /12) |0) *12 +root_key;
                distance = msg_num - (temp + axis);
            );

            slider8 != 128 ? slider8 = msg_num;
            msg_num = min(127,max(0,msg_num - (distance *2) + transpose));
            msg23 = msg_value * 256 + msg_num; 
            midisend(mpos, msg1, msg23);
            slider8 != 128 ? slider9 = msg_num : slider9 = 128;;
            sliderchange();
        ):(
            midisend(mpos, msg1, msg23);
        );
    );

// =================================== END



