// Written by octarone, licensed under GPL, see License.txt or visit <http://www.gnu.org/licenses/>

desc: Pitchbend Smoother (Note Reset)
in_pin:none
out_pin:none
slider1:4<2,16,1>Channels
slider2:1000<1,12000,0.00001>Message Frequency (Hz)
slider3:125<1,5000,0.00001>Interval Min (ms)
slider4:180<1,5000,0.00001>Interval Max (ms)
slider5:0<-1,1,0.00001>Shape Min
slider6:0<-1,1,0.00001>Shape Max



@init
channels = freq = mask = 0;



@slider
channels!==slider1 ? (
  channels = (slider1=min(max(slider1|0, 2), 16));  msg_mid = slider1/2 + 223.5;  msg_rng = (slider1+1)/2;

  // order = 0;
  back = slider1;
  bend = slider1*2;
  prev = slider1*3;
  diff = slider1*4;
  list = slider1*5;
  notes= slider1*6;
  ct = slider1*7;
  co = slider1*8;
  shape = slider1*9;

  memset(bend, 8192, slider1*2);
  memset(diff, 0, slider1*4);
  memset(co, -1, slider1);

  active = 0;
);
slider3 = max(slider3, 1);
slider4 = max(slider4, slider3);
slider6 = max(slider6, slider5);
slider2 = max(max(slider2, 1000/slider3), 1);

freq!==slider2 ? (
  freq = slider2;

  ticks = srate/slider2;  a = ticks*iticks;  // old iticks, to readjust if frequency is automated
  i = first; loop(active, ct[i] *= a; i = i[0]);

  iticks = slider2/srate;
);

lower = srate/1000;
range = (slider4 - slider3)*lower;
lower *= slider3;
shlow = slider5*6.142747046529512769 + 1;
shrng = (slider6 - slider5)*6.142747046529512769;



@block
q = 0;
while(
 ((d = midirecv(o,a,b,c))===0 ? (o = samplesblock; 1)) || q < o ? (
  i = first;
  loop(active,
   (mask>>(i*2) & 3) === 3 ? (
    n = min(max(bend[i] + (ct[i] >= 0 ? diff[i]), 0), 16383)|0;
    prev[i] = n;  midisend(q, i+$xE0, n + (n & $x3F80));

    i===last ? (last = back[i]) : (i===first ? (first = i[0]) : ((h=back[i])[0] = (k=i[0]); back[k] = h));
    active -= 1;  co[i] = -1;
   ) : (
    k = list[i];
    o > k ? (
     p = prev[i];  v = bend[i];  t = ct[i];  x = co[i];  h = i + $xE0;
     l = (o - k - 1)*iticks |0;

     t < 0 ? (
      n = -(x/t);
      l >= n ? (
       l = (n-(n|0))*ticks;
       n ? (
        w = diff[i];  s = shape[i];
        loop(n,
         (n = min(max((x^s)*w + v, 0), 16383)|0) !== p ? (
          p = n; midisend(k, h, n + (n & $x3F80));
         );
         x += t; k += ticks;
        );

        l >= 1 ? (
         v !== p ? (p = v; midisend(k+l, h, v + (v & $x3F80)); );
        );
       ) : (v !== p ? (p = v; midisend(k, h, v + (v & $x3F80)); ));

       i===last ? (last = back[i]) : (i===first ? (first = i[0]) : ((h=back[i])[0] = (k=i[0]); back[k] = h));
       active -= 1;  x = -1;
      ) : (
       w = diff[i];  s = shape[i];  n *= ticks; n += k;
       loop(l+1,
        (l = min(max((x^s)*w + v, 0), 16383)|0) !== p ? (
         p = l; midisend(k, h, l + (l & $x3F80));
        );
        x += t; k += ticks;
       );
       x < 0 ? (x = 0; k = n);
       list[i] = k;
      );
     ) : (
      n = (1 - x)/t;  w = diff[i];
      l >= n ? (
       l = (n-(n|0))*ticks;
       n ? (
        s = shape[i];
        loop(n,
         (n = min(max((x^s)*w + v, 0), 16383)|0) !== p ? (
          p = n; midisend(k, h, n + (n & $x3F80));
         );
         x += t; k += ticks;
        );

        v = min(max(v+w, 0), 16383);  bend[i] = v;
        l >= 1 ? (
         v !== p ? (p = v; midisend(k+l, h, v + (v & $x3F80)); );
        );
       ) : (
        v = min(max(v+w, 0), 16383);  bend[i] = v;
        v !== p ? (p = v; midisend(k, h, v + (v & $x3F80)); );
       );

       i===last ? (last = back[i]) : (i===first ? (first = i[0]) : ((h=back[i])[0] = (k=i[0]); back[k] = h));
       active -= 1;  x = -1;
      ) : (
       s = shape[i];  n *= ticks; n += k;
       loop(l+1,
        (l = min(max((x^s)*w + v, 0), 16383)|0) !== p ? (
         p = l; midisend(k, h, l + (l & $x3F80));
        );
        x += t; k += ticks;
       );
       x > 1 ? (x = 1; k = n);
       list[i] = k;
      );
     );
     prev[i] = p;  co[i] = x;
    );
   );
   i = i[0];
  );

  q = o;  mask = 0;
 );

 d ? (
  abs(a-msg_mid) < msg_rng ? (
   a -= $xE0;  b += c*128;  c = co+a;
   h = 1/(rand(1)*range + lower);
   s = rand(1)*shrng + shlow;

   s >= 1 ? (
    diff[a] = b - ((x=c[0]) < 0 ?
    (
     (active ? (back[a] = last; last[0]) : first) = a;
     last = a;  active += 1;

     c[0] = 0;  list[a] = o;  bend[a]
    ) : (
     c[0] = ((k=list[a]) - o)*h;  bend[a] += ((x + ct[a]*(o-k)*iticks)^shape[a])*diff[a] |0
    ));

    ct[a] = ticks * h;
    shape[a] = s;
   ) : (
    d = bend+a;
    diff[a] = d[0]-b + ((x=c[0]) < 0 ? (
     (active ? (back[a] = last; last[0]) : first) = a;
     last = a;  active += 1;

     c[0] = 1;  list[a] = o;  0
    ) : (
     c[0] = (o - (k=list[a]))*h + 1;  ((x + ct[a]*(o-k)*iticks)^shape[a])*diff[a] |0
    ));

    d[0] = b;
    ct[a] = -(ticks * h);
    shape[a] = 2-s;
   );
   mask |= 1<<a;
  ) : (
   midisend(o, a, b, c);
   a < $xA0 ? (
    a < $x90 ? ((a += notes-$x80) < ct ? a[0] = max(a[0]-1, 0);
    ) : ((a-=$x90) < slider1 && (notes[a] += 1)===1 ? mask |= 2<<a);
   );
  );
  1
 );
);
i = first; loop(active, list[i] -= samplesblock; i = i[0]);