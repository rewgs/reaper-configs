// Written by octarone, licensed under GPL, see License.txt or visit <http://www.gnu.org/licenses/>

desc: Pitchbend Adder Omni (Active Only)
in_pin:Pitchbend
out_pin:none
slider1:100<1,1000,0.00001>Message Frequency (Hz)



@init
// buf = 0;
next = notes = mask = 0;
bend = prev = 8192;
active = -1;
a = 4294967296;



@slider
ticks = max((srate/slider1 + 0.5) |0, 1);



@block
p = 0;

midirecv(o,a,b,c) ? (
 q = o;
 while(
  abs(a-231.5) < 8 ? (
   p[0] = o;  p[1] = b + c*128;
   p += 2;  notes ? (mask += 1);
  ) : (
   midisend(o, a, b, c);
   a < $xA0 ? (
    a < $x90 ? (
     notes ? ((notes -= 1)===0 ? (p[0] = o; p[1] = -3; p += 2));
    ) : (
     (notes += 1)===1 ? (mask += 4294967296);
    );
   );
  );

  (d = midirecv(o,a,b,c))===0 || q < o ? (
   mask > $~32 ? (p[0] = q; p[1] = (mask & $~32) ? -2 : -1; p += 2);
   q = o; mask = 0;
  );

  d
 );
);
p[0] = 2147483647;
p = 0;

o = 0; a = p[0]; p += 2;

next -= samplesblock;
b = active > 0 ? min(a, next) : a;



@sample
o >= b ? (
  while(o >= a) (
   a = p[0];
   (d = p[-1]) < -1 ? (active = -active) :
   (
    d < 0 ? active = 1 : bend = d;
    next = o+ticks;

    active > 0  &&  (b = min(max(bend+spl0*8192, 0), 16383)|0) !== prev ? (
     prev = b; midisend(o, $xE0, b + (b & $x3F80));
    );
   );
   p += 2;
  );

  b = a;
  active > 0 ? (
   o >= next ? (
    (b = min(max(bend+spl0*8192, 0), 16383)|0) !== prev ? (
     prev = b; midisend(o, $xE0, b + (b & $x3F80));
    );
    next = o+ticks;
   );
   b = min(a, next);
  );
);

o += 1;