// Written by octarone, licensed under GPL, see License.txt or visit <http://www.gnu.org/licenses/>

desc: Pitchbend Smoother Omni (Note Reset)
in_pin:none
out_pin:none
slider1:1000<1,12000,0.00001>Message Frequency (Hz)
slider2:125<1,5000,0.00001>Interval Min (ms)
slider3:180<1,5000,0.00001>Interval Max (ms)
slider4:0<-1,1,0.00001>Shape Min
slider5:0<-1,1,0.00001>Shape Max



@init
freq = diff = notes = 0;
bend = prev = 8192;
k = 9007199254740992;



@slider
slider2 = max(slider2, 1);
slider3 = max(slider3, slider2);
slider5 = max(slider5, slider4);
slider1 = max(max(slider1, 1000/slider2), 1);

freq!==slider1 ? (
  freq = slider1;
  ticks = srate/slider1;  t *= ticks*iticks;
  iticks = slider1/srate;
);

lower = srate/1000;
range = (slider3 - slider2)*lower;
lower *= slider2;
shlow = slider4*6.142747046529512769 + 1;
shrng = (slider5 - slider4)*6.142747046529512769;



@block
q = 0;
while(
 ((d = midirecv(o,a,b,c))===0 ? (o = samplesblock; 1)) || q < o ? (
  mask > 1 ? (
   n = min(max(bend + (t >= 0 ? diff), 0), 16383)|0;
   prev = n;  midisend(q, $xE0, n + (n & $x3F80));
   k = 9007199254740992;
  );

  o > k ? (
   l = (o - k - 1)*iticks |0;

   t < 0 ? (
    n = -(x/t);
    l >= n ? (
     l = (n-(n|0))*ticks;
     n ? (
      loop(n,
       (n = min(max((x^shape)*diff + bend, 0), 16383)|0) !== prev ? (
        prev = n; midisend(k, $xE0, n + (n & $x3F80));
       );
       x += t; k += ticks;
      );

      l >= 1 ? (
       bend !== prev ? (prev = bend; midisend(k+l, $xE0, bend + (bend & $x3F80)); );
      );
     ) : (bend !== prev ? (prev = bend; midisend(k, $xE0, bend + (bend & $x3F80)); ));
     k = 9007199254740992;
    ) : (
     n *= ticks; n += k;
     loop(l+1,
      (l = min(max((x^shape)*diff + bend, 0), 16383)|0) !== prev ? (
       prev = l; midisend(k, $xE0, l + (l & $x3F80));
      );
      x += t; k += ticks;
     );
     x < 0 ? (x = 0; k = n);
    );
   ) : (
    n = (1 - x)/t;
    l >= n ? (
     l = (n-(n|0))*ticks;
     n ? (
      loop(n,
       (n = min(max((x^shape)*diff + bend, 0), 16383)|0) !== prev ? (
        prev = n; midisend(k, $xE0, n + (n & $x3F80));
       );
       x += t; k += ticks;
      );

      bend = min(max(bend+diff, 0), 16383);
      l >= 1 ? (
       bend !== prev ? (prev = bend; midisend(k+l, $xE0, bend + (bend & $x3F80)); );
      );
     ) : (
      bend = min(max(bend+diff, 0), 16383);
      bend !== prev ? (prev = bend; midisend(k, $xE0, bend + (bend & $x3F80)); );
     );
     k = 9007199254740992;
    ) : (
     n *= ticks; n += k;
     loop(l+1,
      (l = min(max((x^shape)*diff + bend, 0), 16383)|0) !== prev ? (
       prev = l; midisend(k, $xE0, l + (l & $x3F80));
      );
      x += t; k += ticks;
     );
     x > 1 ? (x = 1; k = n);
    );
   );
  );

  q = o;  mask = -1;
 );

 d ? (
  abs(a-231.5) < 8 ? (
   b += c*128;
   a = 1/(rand(1)*range + lower);
   c = rand(1)*shrng + shlow;

   c >= 1 ? (
    k > 1125899906842624 ? (x = 0;  k = o) : (bend += ((x + t*(o-k)*iticks)^shape)*diff |0;  x = (k - o)*a);
    diff = b - bend;
    t = ticks * a;
    shape = c;
   ) : (
    k > 1125899906842624 ? (x = 1;  k = o;  diff = bend-b) : (diff *= ((x + t*(o-k)*iticks)^shape); diff|=0; diff+=bend-b;  x = (o - k)*a + 1);
    bend = b;
    t = -(ticks * a);
    shape = 2-c;
   );
   mask -= 1;
  ) : (
   midisend(o, a, b, c);
   a < $xA0 ? (
    a < $x90 ? (notes = max(notes-1, 0);
    ) : ((notes += 1)===1 ? mask = abs(mask));
   );
  );
  1
 );
);
k -= samplesblock;