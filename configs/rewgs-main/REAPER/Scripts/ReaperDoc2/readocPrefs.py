# readocPrefs.py - preference window display# Copyright 2012 - Cy Ball## This file is part of ReaperDoc2.## ReaperDoc2 is free software: you can redistribute it and/or modify# it as you please.## ReaperDoc2 is distributed in the hope that it will be useful,# but WITHOUT ANY WARRANTY; without even the implied warranty of# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.try :    from reaper_python import *except ImportError :    passtry:    from tkinter import *    from tkinter import simpledialog as tkSimpleDialogexcept ImportError:    from Tkinter import *    import tkSimpleDialogimport readocDefaults as rdDefimport os, sys, inspect# global dictionary of default valuesdefaultfile = sys.path[0]+'\\'+'ReaperDoc2.ini'txtsep = 'Separator:'txtdate = 'Date Format:'txttime = 'Time Format:'    class PreferenceDialog(tkSimpleDialog.Dialog):    def __init__(self, parent=None, title = 'Preferences'):        tkSimpleDialog.Dialog.__init__(self, parent, title)        #end def __init__            def destroy(self):        self.varsel = None        tkSimpleDialog.Dialog.destroy(self)        #end def destroy    def body(self, master):        #build option list        #separator        lblsep = Label(master, text=txtsep)        lblsep.grid(row=0, padx=5, pady=5)        sepopt = []        for key in rdDef.dfseparators.keys():            sepopt.append(key)        sepopt.sort()        self.varsep = StringVar(master)        if rdDef.defSeparator in rdDef.docDefaults.keys():            self.varsep.set(rdDef.docDefaults[rdDef.defSeparator])        optsep = OptionMenu(master, self.varsep, *sepopt)        optsep.grid(row=0, column=1, padx=5, pady=5)        #date format        lbldate = Label(master, text=txtdate)        lbldate.grid(row=5, padx=5, pady=5)        dateopt = []        for key in rdDef.dfdateforms.keys():            dateopt.append(key)        dateopt.sort()        self.vardate = StringVar(master)        if rdDef.defDateForm in rdDef.docDefaults.keys():            self.vardate.set(rdDef.docDefaults[rdDef.defDateForm])        omdate = OptionMenu(master, self.vardate, *dateopt)        omdate.grid(row=5, column=1, padx=5, pady=5)        #time format        lbltime = Label(master, text=txttime)        lbltime.grid(row=10, padx=5, pady=5)        timeopt = []        for key in rdDef.dftimeforms.keys():            timeopt.append(key)        timeopt.sort()        self.vartime = StringVar(master)        if rdDef.defTimeForm in rdDef.docDefaults.keys():            self.vartime.set(rdDef.docDefaults[rdDef.defTimeForm])        omtime = OptionMenu(master, self.vartime, *timeopt)        omtime.grid(row=10, column=1, padx=5, pady=5)        #end def body    def apply(self):        rdDef.docDefaults[rdDef.defSeparator] = self.varsep.get()        rdDef.docDefaults[rdDef.defDateForm] = self.vardate.get()        rdDef.docDefaults[rdDef.defTimeForm] = self.vartime.get()        rdDef.write_dictionary(defaultfile,rdDef.docDefaults)        #end def apply    #end class PreferenceDialog        